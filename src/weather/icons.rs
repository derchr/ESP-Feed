use anyhow::{Context, Result};
use lazy_static::lazy_static;
use png::{Decoder, OutputInfo};
use std::collections::HashMap;

pub fn get_icon(icon: &str) -> Result<(Vec<u8>, OutputInfo)> {
    let icon_bytes = *WEATHER_ICONS.get(icon).context("Could not find icon")?;
    let decoder = Decoder::new(icon_bytes);

    let mut reader = decoder.read_info().unwrap();
    log::info!("About to allocate...");
    let mut buf = Vec::with_capacity(reader.output_buffer_size());
    let info = reader.next_frame(&mut buf).unwrap();
    // let data = &buf[..info.buffer_size()];

    Ok((buf, info))
}

lazy_static! {
    pub static ref WEATHER_ICONS: HashMap<&'static str, &'static [u8]> = {
        HashMap::from([
            (
                "01d",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "01d.png"
                ))
                .as_slice(),
            ),
            (
                "01n",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "01n.png"
                ))
                .as_slice(),
            ),
            (
                "02d",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "02d.png"
                ))
                .as_slice(),
            ),
            (
                "02n",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "02n.png"
                ))
                .as_slice(),
            ),
            (
                "03d",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "03d.png"
                ))
                .as_slice(),
            ),
            (
                "03n",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "03n.png"
                ))
                .as_slice(),
            ),
            (
                "04d",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "04d.png"
                ))
                .as_slice(),
            ),
            (
                "04n",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "04n.png"
                ))
                .as_slice(),
            ),
            (
                "09d",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "09d.png"
                ))
                .as_slice(),
            ),
            (
                "09n",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "09n.png"
                ))
                .as_slice(),
            ),
            (
                "09d",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "09d.png"
                ))
                .as_slice(),
            ),
            (
                "09n",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "09n.png"
                ))
                .as_slice(),
            ),
            (
                "10d",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "10d.png"
                ))
                .as_slice(),
            ),
            (
                "10n",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "10n.png"
                ))
                .as_slice(),
            ),
            (
                "11d",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "11d.png"
                ))
                .as_slice(),
            ),
            (
                "11n",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "11n.png"
                ))
                .as_slice(),
            ),
            (
                "13d",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "13d.png"
                ))
                .as_slice(),
            ),
            (
                "13n",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "13n.png"
                ))
                .as_slice(),
            ),
            (
                "50d",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "50d.png"
                ))
                .as_slice(),
            ),
            (
                "50n",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "50n.png"
                ))
                .as_slice(),
            ),
            (
                "bw",
                include_bytes!(concat!(
                    env!("CARGO_MANIFEST_DIR"),
                    "/resources/icons/",
                    "bw.png"
                ))
                .as_slice(),
            ),
        ])
    };
}
